* Change log:
19-11-2016 - For recursive types get retricted list function	
30-11-2016 - TYP_<type> changed to LIST_<type>	
13-12-2016 - Arguments for get retricted list function changed
14-01-2017 - Based om server model	
20-10-2017 - Operation / ResultNameExtension in result name.
28-02-2018 - TYPE CODE not from BUSINESS_OBJECT_TYPE but from TYPE;
[[INCLUDE,templates\includes\general.txt]]
[[TEXT,SERVER_RESULT_NAME]]<<SERVICE1:U>>[[IF:!2=#]]_<<OPERATION2:U>>[[ENDIF]][[LOOP,OPERATION_TYPE]]_<<OPERATION_TYPE1:U>>[[ENDLOOP,OPERATION_TYPE]][[ENDTEXT]]
[[TEXT,SERVER_ARGUMENT_NAME]]<<ARGUMENT:L>>[[LOOP,ARGUMENT_ATTRIBUTE]]<<ARGUMENT_ATTRIBUTE:L>>[[ENDLOOP,ARGUMENT_ATTRIBUTE]][[ENDTEXT]]
[[BODY]]<?php
session_start();
include 'CubeDbLogon.php';

set_error_handler("CubeError");

$import=explode("<|||>",file_get_contents('php://input'));
switch ($import[0]) {[[LOOP,BUSINESS_OBJECT_TYPE]][[LOOP,SERVICE:3=E]]

case '<<SERVICE:C>>':[[IF:CHILD(ARGUMENT)]]

	list([[LOOP,ARGUMENT]]$<<TEXT,SERVER_ARGUMENT_NAME>>[[IF:!LAST]], [[ENDIF]][[ENDLOOP,ARGUMENT]]) = explode("<|>", $import[1][[IF,SERVICE:1=create]][[LOOP,ARGUMENT:0=x_]][[IF:FIRST]]."[[ENDIF]]<|>[[IF:LAST]]"[[ENDIF]][[ENDLOOP,ARGUMENT]][[ENDIF]]);[[ENDIF]][[LOOP,OPERATION]][[IF,SERVICE:CHILD(ARGUMENT)]][[FORH,SERVICE:N>N]]

	$stid = oci_parse($conn, "BEGIN pkg_[[FOR,BUSINESS_OBJECT_TYPE:N>N]][[LOOP,TYPE]]<<TYPE1:L>>[[ENDLOOP,TYPE]][[ENDFOR]].<<OPERATION:L>> ([[IF,SERVICE:2=N]]
		:p_cube_row,[[ENDIF]][[LOOP,ARGUMENT]]
		:<<TEXT,SERVER_ARGUMENT_NAME>>[[IF:!LAST]],[[ENDIF]][[ENDLOOP,ARGUMENT]][[IF,SERVICE:2=Y[AND]CHILD(OPERATION:CHILD(EXPORT))]],
		:p_cube_row[[ENDIF]]);
	END;");[[LOOP,ARGUMENT]]
	oci_bind_by_name($stid,":<<TEXT,SERVER_ARGUMENT_NAME>>",$<<TEXT,SERVER_ARGUMENT_NAME>>);[[ENDLOOP,ARGUMENT]][[ENDFOR]]
[[ELSE]]

	$stid = oci_parse($conn, "BEGIN pkg_[[FOR,BUSINESS_OBJECT_TYPE:N>N]][[LOOP,TYPE]]<<TYPE1:L>>[[ENDLOOP,TYPE]][[ENDFOR]].<<OPERATION:L>> (:p_cube_row); END;");[[ENDIF]][[IF:CHILD(EXPORT)]]
	$r = perform_db_request();
	if (!$r) { return; }[[IF:4=Y]]
	$first = True;[[ELSE]]
	echo "<<TEXT,SERVER_RESULT_NAME>>";[[ENDIF]]
	[[IF:3=Y]]while[[ELSE]]if[[ENDIF]] ($row = oci_fetch_assoc($curs)) {[[IF:4=Y]]
		if ($first) { $first = False; echo "<<TEXT,SERVER_RESULT_NAME>>";}[[ENDIF]]
		echo "<|||>"[[LOOP,EXPORT]][[LOOP,ARGUMENT]].[[IF:1=subscript]][[IF:FIRST]]"(".[[ELSE]]" (".[[ENDIF]][[ELSE]][[IF:!FIRST]]"[[IF,EXPORT:1=Y]]<|>[[ELSE]] [[ENDIF]]".[[ENDIF]][[ENDIF]]$row["<<ARGUMENT:U>>"][[IF:1=subscript]].")"[[ENDIF]][[ENDLOOP,ARGUMENT]];[[IF:!LAST]]
		echo "<||>"[[ENDIF]][[ENDLOOP,EXPORT]]
	}[[IF:!LAST]]
	echo "<||||>";[[ENDIF]][[ELSE]]
	$r = oci_execute($stid);
	if (!$r) {
		ProcessDbError($stid);
		return;
	}
	echo "<<TEXT,SERVER_RESULT_NAME>>";[[ENDIF]][[ENDLOOP,OPERATION]]
	break;[[ENDLOOP,SERVICE]][[ENDLOOP,BUSINESS_OBJECT_TYPE]]

default:
	echo "ERROR<|||>";
	echo file_get_contents('php://input');
}

function perform_db_request()
{
	global $conn, $stid, $curs;

	$curs = oci_new_cursor($conn);
	oci_bind_by_name($stid,":p_cube_row",$curs,-1,OCI_B_CURSOR);
	$r = oci_execute($stid);
	if (!$r) {
		ProcessDbError($stid);
		return false;
	}
	//echo $r;
	$r = oci_execute($curs);
	if (!$r) {
		ProcessDbError($stid);
		return false;
	}
	return true;
}

function ProcessDbError($stid) {
	$e = oci_error($stid);
	echo "ERROR<|||>ORA-error: ".$e['code'].": ".$e['message'];
}

function CubeError($errno, $errstr) {
	if ($errno > 2) {
		echo "Error: [$errno] $errstr";   
	}
}
?>[[ENDBODY]]